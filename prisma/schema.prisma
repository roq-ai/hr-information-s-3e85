generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model employee_data {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String    @db.Uuid
  job_title  String?   @db.VarChar(100)
  start_date DateTime? @db.Timestamp(6)
  end_date   DateTime? @db.Timestamp(6)
  salary     Int?
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model payroll {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String    @db.Uuid
  gross_pay  Int?
  net_pay    Int?
  taxes      Int?
  deductions Int?
  pay_period DateTime? @db.Timestamp(6)
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model team {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?       @db.VarChar(255)
  name        String        @db.VarChar(255)
  created_at  DateTime      @default(now()) @db.Timestamp(6)
  updated_at  DateTime      @default(now()) @db.Timestamp(6)
  user_id     String        @db.Uuid
  tenant_id   String        @db.VarChar(255)
  user        user          @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  team_member team_member[]
}

model team_member {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  team_id    String    @db.Uuid
  user_id    String    @db.Uuid
  role       String?   @db.VarChar(100)
  join_date  DateTime? @db.Timestamp(6)
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  team       team      @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id            String          @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email         String          @unique @db.VarChar(255)
  firstName     String?         @db.VarChar(255)
  lastName      String?         @db.VarChar(255)
  roq_user_id   String          @db.VarChar(255)
  tenant_id     String          @db.VarChar(255)
  created_at    DateTime        @default(now()) @db.Timestamp(6)
  updated_at    DateTime        @default(now()) @db.Timestamp(6)
  employee_data employee_data[]
  payroll       payroll[]
  team          team[]
  team_member   team_member[]
  vacation      vacation[]
}

model vacation {
  id         String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  user_id    String    @db.Uuid
  start_date DateTime? @db.Timestamp(6)
  end_date   DateTime? @db.Timestamp(6)
  days_taken Int?
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @default(now()) @db.Timestamp(6)
  user       user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
